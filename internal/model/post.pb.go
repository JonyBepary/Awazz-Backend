// Code generated by protoc-gen-go. DO NOT EDIT.
// source: post.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Post struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content              string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt            *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	Likes                int64                  `protobuf:"varint,6,opt,name=likes,proto3" json:"likes,omitempty"`
	Shares               int64                  `protobuf:"varint,7,opt,name=shares,proto3" json:"shares,omitempty"`
	Comments             int64                  `protobuf:"varint,8,opt,name=comments,proto3" json:"comments,omitempty"`
	Author               string                 `protobuf:"bytes,9,opt,name=author,proto3" json:"author,omitempty"`
	Parent               string                 `protobuf:"bytes,10,opt,name=parent,proto3" json:"parent,omitempty"`
	Children             []string               `protobuf:"bytes,11,rep,name=children,proto3" json:"children,omitempty"`
	Tags                 []string               `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty"`
	Mentions             []string               `protobuf:"bytes,13,rep,name=mentions,proto3" json:"mentions,omitempty"`
	IsSensitive          bool                   `protobuf:"varint,14,opt,name=is_sensitive,json=isSensitive,proto3" json:"is_sensitive,omitempty"`
	IsNsfw               bool                   `protobuf:"varint,15,opt,name=is_nsfw,json=isNsfw,proto3" json:"is_nsfw,omitempty"`
	IsDeleted            bool                   `protobuf:"varint,16,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	IsPinned             bool                   `protobuf:"varint,17,opt,name=is_pinned,json=isPinned,proto3" json:"is_pinned,omitempty"`
	IsEdited             bool                   `protobuf:"varint,18,opt,name=is_edited,json=isEdited,proto3" json:"is_edited,omitempty"`
	IsLiked              bool                   `protobuf:"varint,19,opt,name=is_liked,json=isLiked,proto3" json:"is_liked,omitempty"`
	IsShared             bool                   `protobuf:"varint,20,opt,name=is_shared,json=isShared,proto3" json:"is_shared,omitempty"`
	IsCommented          bool                   `protobuf:"varint,21,opt,name=is_commented,json=isCommented,proto3" json:"is_commented,omitempty"`
	IsSubscribed         bool                   `protobuf:"varint,22,opt,name=is_subscribed,json=isSubscribed,proto3" json:"is_subscribed,omitempty"`
	IsBookmarked         bool                   `protobuf:"varint,23,opt,name=is_bookmarked,json=isBookmarked,proto3" json:"is_bookmarked,omitempty"`
	IsReblogged          bool                   `protobuf:"varint,24,opt,name=is_reblogged,json=isReblogged,proto3" json:"is_reblogged,omitempty"`
	IsMentioned          bool                   `protobuf:"varint,25,opt,name=is_mentioned,json=isMentioned,proto3" json:"is_mentioned,omitempty"`
	IsPoll               bool                   `protobuf:"varint,26,opt,name=is_poll,json=isPoll,proto3" json:"is_poll,omitempty"`
	IsPollVoted          bool                   `protobuf:"varint,27,opt,name=is_poll_voted,json=isPollVoted,proto3" json:"is_poll_voted,omitempty"`
	IsPollExpired        bool                   `protobuf:"varint,28,opt,name=is_poll_expired,json=isPollExpired,proto3" json:"is_poll_expired,omitempty"`
	IsPollClosed         bool                   `protobuf:"varint,29,opt,name=is_poll_closed,json=isPollClosed,proto3" json:"is_poll_closed,omitempty"`
	IsPollMultiple       bool                   `protobuf:"varint,30,opt,name=is_poll_multiple,json=isPollMultiple,proto3" json:"is_poll_multiple,omitempty"`
	IsPollHideTotals     bool                   `protobuf:"varint,31,opt,name=is_poll_hide_totals,json=isPollHideTotals,proto3" json:"is_poll_hide_totals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *Post) Reset()         { *m = Post{} }
func (m *Post) String() string { return proto.CompactTextString(m) }
func (*Post) ProtoMessage()    {}
func (*Post) Descriptor() ([]byte, []int) {
	return fileDescriptor_e114ad14deab1dd1, []int{0}
}

func (m *Post) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Post.Unmarshal(m, b)
}
func (m *Post) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Post.Marshal(b, m, deterministic)
}
func (m *Post) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Post.Merge(m, src)
}
func (m *Post) XXX_Size() int {
	return xxx_messageInfo_Post.Size(m)
}
func (m *Post) XXX_DiscardUnknown() {
	xxx_messageInfo_Post.DiscardUnknown(m)
}

var xxx_messageInfo_Post proto.InternalMessageInfo

func (m *Post) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Post) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Post) GetCreatedAt() *timestamppb.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Post) GetUpdatedAt() *timestamppb.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *Post) GetDeletedAt() *timestamppb.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

func (m *Post) GetLikes() int64 {
	if m != nil {
		return m.Likes
	}
	return 0
}

func (m *Post) GetShares() int64 {
	if m != nil {
		return m.Shares
	}
	return 0
}

func (m *Post) GetComments() int64 {
	if m != nil {
		return m.Comments
	}
	return 0
}

func (m *Post) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Post) GetParent() string {
	if m != nil {
		return m.Parent
	}
	return ""
}

func (m *Post) GetChildren() []string {
	if m != nil {
		return m.Children
	}
	return nil
}

func (m *Post) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Post) GetMentions() []string {
	if m != nil {
		return m.Mentions
	}
	return nil
}

func (m *Post) GetIsSensitive() bool {
	if m != nil {
		return m.IsSensitive
	}
	return false
}

func (m *Post) GetIsNsfw() bool {
	if m != nil {
		return m.IsNsfw
	}
	return false
}

func (m *Post) GetIsDeleted() bool {
	if m != nil {
		return m.IsDeleted
	}
	return false
}

func (m *Post) GetIsPinned() bool {
	if m != nil {
		return m.IsPinned
	}
	return false
}

func (m *Post) GetIsEdited() bool {
	if m != nil {
		return m.IsEdited
	}
	return false
}

func (m *Post) GetIsLiked() bool {
	if m != nil {
		return m.IsLiked
	}
	return false
}

func (m *Post) GetIsShared() bool {
	if m != nil {
		return m.IsShared
	}
	return false
}

func (m *Post) GetIsCommented() bool {
	if m != nil {
		return m.IsCommented
	}
	return false
}

func (m *Post) GetIsSubscribed() bool {
	if m != nil {
		return m.IsSubscribed
	}
	return false
}

func (m *Post) GetIsBookmarked() bool {
	if m != nil {
		return m.IsBookmarked
	}
	return false
}

func (m *Post) GetIsReblogged() bool {
	if m != nil {
		return m.IsReblogged
	}
	return false
}

func (m *Post) GetIsMentioned() bool {
	if m != nil {
		return m.IsMentioned
	}
	return false
}

func (m *Post) GetIsPoll() bool {
	if m != nil {
		return m.IsPoll
	}
	return false
}

func (m *Post) GetIsPollVoted() bool {
	if m != nil {
		return m.IsPollVoted
	}
	return false
}

func (m *Post) GetIsPollExpired() bool {
	if m != nil {
		return m.IsPollExpired
	}
	return false
}

func (m *Post) GetIsPollClosed() bool {
	if m != nil {
		return m.IsPollClosed
	}
	return false
}

func (m *Post) GetIsPollMultiple() bool {
	if m != nil {
		return m.IsPollMultiple
	}
	return false
}

func (m *Post) GetIsPollHideTotals() bool {
	if m != nil {
		return m.IsPollHideTotals
	}
	return false
}

func init() {
	proto.RegisterType((*Post)(nil), "model.Post")
}

func init() { proto.RegisterFile("post.proto", fileDescriptor_e114ad14deab1dd1) }

var fileDescriptor_e114ad14deab1dd1 = []byte{
	// 559 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x93, 0x4d, 0x4f, 0x1b, 0x4d,
	0x10, 0x84, 0x65, 0x3e, 0xfc, 0x31, 0x80, 0xe1, 0x1d, 0x78, 0xa1, 0x31, 0x21, 0x38, 0x24, 0x8a,
	0x7c, 0x89, 0x91, 0x92, 0x53, 0x8e, 0x84, 0x20, 0xe5, 0x10, 0x22, 0x64, 0x50, 0xae, 0xab, 0xb5,
	0xa7, 0x6d, 0xb7, 0x98, 0xdd, 0x59, 0x6d, 0x8f, 0x21, 0xff, 0x21, 0x7f, 0x3a, 0x9a, 0xde, 0x19,
	0x5f, 0xb9, 0x51, 0x55, 0x4f, 0xd1, 0x3b, 0x25, 0x59, 0xa9, 0xca, 0xb1, 0x1f, 0x57, 0xb5, 0xf3,
	0x4e, 0x6f, 0x17, 0xce, 0xa0, 0x1d, 0x5c, 0x2c, 0x9c, 0x5b, 0x58, 0xbc, 0x12, 0x73, 0xba, 0x9a,
	0x5f, 0x79, 0x2a, 0x90, 0x7d, 0x5e, 0x54, 0x0d, 0x77, 0xf9, 0xb7, 0xab, 0xb6, 0xee, 0x1d, 0x7b,
	0xdd, 0x57, 0x1b, 0x64, 0xa0, 0x35, 0x6c, 0x8d, 0x7a, 0x93, 0x0d, 0x32, 0x1a, 0x54, 0x67, 0xe6,
	0x4a, 0x8f, 0xa5, 0x87, 0x0d, 0x31, 0x93, 0xd4, 0x5f, 0x95, 0x9a, 0xd5, 0x98, 0x7b, 0x34, 0x59,
	0xee, 0x61, 0x73, 0xd8, 0x1a, 0xed, 0x7c, 0x1e, 0x8c, 0x9b, 0x43, 0xe3, 0x74, 0x68, 0xfc, 0x98,
	0x0e, 0x4d, 0x7a, 0x91, 0xbe, 0x96, 0xea, 0xaa, 0x32, 0xa9, 0xba, 0xf5, 0x7a, 0x35, 0xd2, 0x4d,
	0xd5, 0xa0, 0xc5, 0x58, 0xdd, 0x7e, 0xbd, 0x1a, 0xe9, 0x6b, 0xaf, 0x8f, 0xd4, 0xb6, 0xa5, 0x27,
	0x64, 0x68, 0x0f, 0x5b, 0xa3, 0xcd, 0x49, 0x23, 0xf4, 0xb1, 0x6a, 0xf3, 0x32, 0xaf, 0x91, 0xa1,
	0x23, 0x76, 0x54, 0x7a, 0xa0, 0xba, 0x33, 0x57, 0x14, 0x58, 0x7a, 0x86, 0xae, 0x24, 0x6b, 0x1d,
	0x3a, 0xf9, 0xca, 0x2f, 0x5d, 0x0d, 0x3d, 0xd9, 0x24, 0xaa, 0xe0, 0x57, 0x79, 0x1d, 0xb6, 0x52,
	0x8d, 0xdf, 0x28, 0xf9, 0x5f, 0x4b, 0xb2, 0xa6, 0xc6, 0x12, 0x76, 0x86, 0x9b, 0xa3, 0xde, 0x64,
	0xad, 0xb5, 0x56, 0x5b, 0x3e, 0x5f, 0x30, 0xec, 0x8a, 0x2f, 0x7f, 0x07, 0x3e, 0x1c, 0x22, 0x57,
	0x32, 0xec, 0x35, 0x7c, 0xd2, 0xfa, 0x9d, 0xda, 0x25, 0xce, 0x18, 0x4b, 0x26, 0x4f, 0xcf, 0x08,
	0xfd, 0x61, 0x6b, 0xd4, 0x9d, 0xec, 0x10, 0x3f, 0x24, 0x4b, 0x9f, 0xa8, 0x0e, 0x71, 0x56, 0xf2,
	0xfc, 0x05, 0xf6, 0x25, 0x6d, 0x13, 0xff, 0xe2, 0xf9, 0x8b, 0x3e, 0x57, 0x8a, 0x38, 0x8b, 0x8b,
	0xc0, 0x81, 0x64, 0x3d, 0xe2, 0xef, 0x8d, 0xa1, 0xcf, 0x54, 0x8f, 0x38, 0xab, 0xa8, 0x2c, 0xd1,
	0xc0, 0x7f, 0x92, 0x76, 0x89, 0xef, 0x45, 0xc7, 0x10, 0x0d, 0x85, 0xaa, 0x4e, 0xe1, 0xad, 0x68,
	0x7d, 0xaa, 0xba, 0xc4, 0x59, 0x18, 0xd4, 0xc0, 0xa1, 0x64, 0x1d, 0xe2, 0x9f, 0x41, 0xc6, 0x9e,
	0x8c, 0x6a, 0xe0, 0x28, 0xf5, 0x1e, 0x44, 0xc7, 0xc7, 0xc4, 0x5d, 0xd1, 0xc0, 0xff, 0xe9, 0x31,
	0x37, 0xc9, 0xd2, 0xef, 0xd5, 0x5e, 0xe8, 0xaf, 0xa6, 0x3c, 0xab, 0x69, 0x8a, 0x06, 0x8e, 0x85,
	0xd9, 0x25, 0x7e, 0x58, 0x7b, 0x11, 0x9a, 0x3a, 0xf7, 0x54, 0xe4, 0x75, 0xf8, 0x88, 0x93, 0x04,
	0x7d, 0x5b, 0x7b, 0xf1, 0x58, 0x8d, 0x53, 0xeb, 0x16, 0x0b, 0x34, 0x00, 0xe9, 0xd8, 0x24, 0x59,
	0x11, 0x89, 0x5b, 0xa3, 0x81, 0xd3, 0x84, 0xdc, 0x25, 0x2b, 0x8e, 0x5b, 0x39, 0x6b, 0x61, 0x90,
	0xc6, 0xbd, 0x77, 0xd6, 0xea, 0x4b, 0xf9, 0x86, 0x10, 0x64, 0xcf, 0x2e, 0x3c, 0xe6, 0x2c, 0x95,
	0x43, 0xfc, 0x3b, 0x58, 0xfa, 0xa3, 0xda, 0x4f, 0x0c, 0xfe, 0xa9, 0x28, 0x4c, 0xf2, 0x46, 0xa8,
	0xbd, 0x86, 0xba, 0x6d, 0x4c, 0xfd, 0x41, 0xf5, 0x13, 0x37, 0xb3, 0x8e, 0xd1, 0xc0, 0x79, 0x7a,
	0x50, 0xc0, 0x6e, 0xc4, 0xd3, 0x23, 0x75, 0x90, 0xa8, 0x62, 0x65, 0x3d, 0x55, 0x16, 0xe1, 0xad,
	0x70, 0xfd, 0x86, 0xbb, 0x8b, 0xae, 0xfe, 0xa4, 0x0e, 0x13, 0xb9, 0x24, 0x83, 0x99, 0x77, 0x3e,
	0xb7, 0x0c, 0x17, 0x02, 0x1f, 0x34, 0xf0, 0x0f, 0x32, 0xf8, 0x28, 0xfe, 0xb4, 0x2d, 0x3f, 0xa4,
	0x2f, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x79, 0xa2, 0xd0, 0x61, 0x4a, 0x04, 0x00, 0x00,
}
